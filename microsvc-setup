

# Setup

minikube start  --cpus='4' --memory='8192m' --nodes=5
kubectl create namespace microsvc-demo
kubectl config set-context --current --namespace=microsvc-demo
kubectl taint nodes minikube application=microsvc-demo:NoSchedule

# Need to do adservice first
kubectl apply -f release/adservice-kubernetes-manifests.yaml -n microsvc-demo

# make sure adservice is complete before running the custom below
kubectl apply -f release/custom-kubernetes-manifests.yaml -n microsvc-demo

# port-forward the front-end service 8080:80
# test
http://localhost:8080


# Deploy Prometheus (one-time thing; run 2 lines below if never run before)
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

# create namespace for monitoring and then install prometheus
kubectl create namespace monitoring
helm install monitoring prometheus-community/kube-prometheus-stack -n monitoring

# port forward localhost 3000 to monitoring-grafana 3000
http://localhost:3000


# Last but not the least, run the load generator
# ADJUST THE NUMBER OF USERS IF YOU MUST
kubectl apply -f release/load-generator-kubernetes-manifests.yaml


# Cleanup

minikube stop
minikube delete




# build
minikube start  --cpus='4' --memory='8192m'
skaffold run



